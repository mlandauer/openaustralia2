.stripe-side
  .main
    %p.printonly This data was produced by OpenAustralia from a variety of sources.
    #mp.block
      %h4 #{@member.formal_name}
      .blockbody
        = image_tag("mpsL/#{@member.person_id}.jpg", :class => "portrait", :alt => "Photo of #{@member.name}")
        %ul.hilites
          %li
            %strong #{@member.party} #{@member.generic_reference} for #{@member.constituency}
          - unless @member.current_minister_offices.empty?
            %li= @member.current_minister_offices.map{|o| "#{o.position} (since #{o.from_date.to_s(:simple_short)})"}.join('<br>')
          %li
            %strong
              - if @member.representative?
                Entered House of Representatives
              - elsif @member.senator?
                Became a Senator
              on #{@member.entered_house.to_s(:simple)}
            &mdash; #{@member.entered_reason_text}
          %li
            - link_to alert_path(:only => 1, :pid => @member.person_id) do
              %strong Email me whenever #{@member.name} speaks
            (no more than once per day)
        %ul.jumpers
          %li= link_to "Numbers", "#numbers"
          %li= link_to "Register of Interests", "#register"
    / end .block
    %a{ :name => "hansard" }
    #hansard.block
      %h4 Most recent appearances in parliament
      .blockbody
        %p No data to display.
        %p#moreappear
          = link_to "More of #{@member.name}'s recent appearances", search_path(:pid => @member.person_id, :pop => 1, :anchor => "n4")
    / end .block
    %a{ :name => "numbers" }
    #numbers.block
      %h4 Numbers
      .blockbody
        %p
          %em
            Please note that numbers do not measure quality. Also, #{@member.generic_reference.pluralize} may
            do other things not currently covered by this site.
          = surround("(", ")") do
            = link_to "More about this", help_path(:anchor => "numbers")
        %ul
          - if @member.debate_sections_spoken_in_last_year
            %li
              Has spoken in
              - link_to search_path(:pid => @member.person_id, :pop => 1) do
                %strong= pluralize(@member.debate_sections_spoken_in_last_year, "debate")
              in the last year &mdash;
              = "average"
              amongst #{@member.generic_reference.pluralize}.
          - if @member.comments_on_speeches
            %li
              People have made
              %strong
                = pluralize(@member.comments_on_speeches, "comment")
              on this #{@member.generic_reference}'s speeches &mdash;
              = "average"
              amongst #{@member.generic_reference.pluralize}.
          - if @member.reading_age_range
            %li
              This #{@member.generic_reference}'s speeches are understandable to an average
              %strong= @member.reading_age_range
              year old, going by the
              = link_to "Flesch-Kincaid Grade Level", "http://en.wikipedia.org/wiki/Flesch-Kincaid_Readability_Test"
              score.
          %li
            %strong 0
            people are tracking whenever this #{@member.generic_reference} speaks &mdash;
            = surround('', '.') do
              = link_to "email me whenever #{@member.name} speaks", alert_path(:only => 1, :pid => @member.person_id)
          - if @member.three_word_alliterations
            %li
              Has used three-word alliterative phrases (e.g. "she sells seashells")
              %strong= pluralize(@member.three_word_alliterations, "time")
              in debates &mdash;
              = "well above average"
              amongst #{@member.generic_reference.pluralize}.
              %small
                = surround("(", ")") do
                  = link_to "Why is this here?", help_path(:anchor => "numbers")
          - if @member.three_word_alliteration_content
            = "<!-- #{@member.three_word_alliteration_content} -->"
    / end .block
    %a{ :name => "register" }
    #register.block
      %h4
        Register of Interests
        %small
          = surround('(', ')') do
            = link_to "What's this?", help_path(:anchor => 'regmem')
      .blockbody
        = link_to("Scan of #{@member.name}'s latest entry (including amendments)", "/regmem/scan/register_interests_#{@member.person_id}.pdf") + image_tag("pdficon_small.gif", :alt => "PDF")
    / end .block
  / end .main
  .sidebar
    = render :partial => "shared/donate"
    #mpsearch.block
      %h4 Search this person's speeches
      .blockbody
        .mpsearchbox
          %form{ :action => "/search/", :method => "get" }
            %p
              %input{ :name => "s", :size => "24", :maxlength => "200" }
              %input{ :name => "pid", :type => "hidden", :value => @member.person_id }
              %input.submit{ :type => "submit", :value => "GO" }
    / end .block
    .block
      %h4 More useful links for this person
      .blockbody
        %ul
          - if @member.mp_website
            %li= link_to "#{@member.name}'s personal website", @member.mp_website
          - if @member.mp_biography_qanda
            %li
              = link_to "Biography", @member.mp_biography_qanda
              %small (From ABC's Q &amp; A)
          - if @member.mp_contact_details
            %li
              = link_to "Contact details", @member.mp_contact_details
              %small (From Australian Parliament website)
          - if @member.mp_twitter_invite_tweetmp
            %li
              = link_to "Invite #{@member.name} to use Twitter", @member.mp_twitter_invite_tweetmp
              %small
                (via #{link_to "tweetMP", "http://tweetmp.org.au"})
    / end block
    - unless @member.non_current_minister_offices.empty?
      .block
        %h4 Other offices held in the past
        .blockbody
          %ul
            - @member.non_current_minister_offices.sort{|a,b| b.from_date <=> a.from_date}.each do |o|
              %li= "#{o.position} (#{o.from_date.to_s(:simple_short)} to #{o.to_date.to_s(:simple_short).strip})"
    .block
      %h4 Journalist?
      .blockbody
        %p
          Please feel free to use the data on this page, but if you do you must cite OpenAustralia.org in the
          body of your articles as the source of any analysis or data you get off this site. If you ignore this,
          we might have to start keeping these sorts of records on you...
  / end .sidebar
  .break